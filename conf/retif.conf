# 2020 - Gabriele Serra
# Scheduling middleware configuration

# This file is needed to properly configure the scheduling middleware.
# Please do not edit if you don't know what you are doing.

# ----------------------------
# KERNEL CONFIGURATION
# ----------------------------

# Kernel configuration parameters allows to modify default values of Kernel
# schedulers and restore it when the deamon terminates. Here are reported
# snippets of man pages to explain what this params do actually

# sched_rr_timeslice_ms
# Linux 3.9 added a mechanism for adjusting the SCHED_RR quantum:
# the /proc/sys/kernel/sched_rr_timeslice_ms file exposes the quantum 
# as a millisecond value, whose default is 100. 
# Writing 0 to this file resets the quantum to the default value.

# sched_rt_period_us
# This file specifies a scheduling period that is equivalent to 100% CPU 
# bandwidth. The value in this file can range from 1 to INT_MAX, giving an 
# operating range of 1 microsecond to around 35 minutes. The default value in 
# this file is 1,000,000 (1 second).

# sched_rt_runtime_us
# The value in this file specifies how much of the "period" time can be used by 
# all real-time and deadline scheduled processes on the system. The value in 
# this file can range from -1 to INT_MAX-1. Specifying -1 makes the runtime the
# same as the period; that is, no CPU time is set aside for non-real-time 
# processes (which was the Linux behavior before kernel 2.6.25). The default 
# value in this file is 950,000 (0.95 seconds), meaning that 5% of the CPU time
# is reserved for processes that don't run under a real-time or deadline 
# scheduling policy.

# EXAMPLE
# ! Kernel parameters
# 100                       # rr_timeslice_ms
# 1000000                   # sched_rt_period_us
# 950000                    # sched_rt_runtime_us

! Kernel parameters
100                         # rr_timeslice_ms
1000000                     # sched_rt_period_us
-1                          # sched_rt_runtime_us

# ----------------------------
# CLASS CONFIGURATION
# ----------------------------

# Available scheduling plugins are

# EDF over SCHED_DEADLINE
# Earliest-deadline-first implementation built on a constant-bandwidth-server

# RM over SCHED_FIFO
# Rate-monotonic implemented as fixed-priority scheduling with priorities pool

# FP over SCHED_FIFO
# Fixed priority scheduling in real-time mode

# RR over SCHED_RR
# Round-robin scheduling with a fixed priority

# Kernel priorities pool can't be overlapped and must be assigned following the 
# priority order among different classes.
# Please refer to http://man7.org/linux/man-pages/man7/sched.7.html

# EXAMPLE
# ! Scheduling plugin - Kernel priority pool
# EDF 99/99
# RM 50/99
# RR 1/49

! Scheduling plugin - Kernel priority pool - CPUs
EDF     100-100     0
RM      50-99       1,2
RR      1-49        1,2
FP      1-99        3,4,5,6,7
